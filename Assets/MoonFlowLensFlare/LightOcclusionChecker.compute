#pragma kernel PrepareLightOcclusion

struct LightUV
{
    int x;
    int y;
};
RWStructuredBuffer<float> _LightSourceDepth;
RWStructuredBuffer<LightUV> _LightUV;
Texture2D<float4> _DepthTex;
float4 _ZBufferDelivered;

float LinearEyeDepth(float depth, float4 zBufferParam)
{
    return 1.0 / (zBufferParam.z * depth + zBufferParam.w);
}

[numthreads(1,1,1)]
void PrepareLightOcclusion (uint3 id : SV_DispatchThreadID)
{
    for (int i = 0; i < 8; i++)
    {
        _LightSourceDepth[i] = LinearEyeDepth(_DepthTex[uint2(_LightUV[i].x, _LightUV[i].y)].x, _ZBufferDelivered);
    }
}

